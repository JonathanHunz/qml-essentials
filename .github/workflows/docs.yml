name: Documentation
on:
  pull_request:
    branches: [ "main" ]
  workflow_call:
    inputs:
      test-run-id:
        required: true
        type: string
      runner_label:
        required: true
        type: string
permissions:
  contents: write
jobs:
  check-runner:
    runs-on: ubuntu-latest
    outputs:
      runner_label: ${{ steps.set-runner.outputs.runner_label }}
    steps:
      - name: Set runner
        id: set-runner
        run: |
          echo ${{ github.event.inputs.runner_label }}
          if [ -n "${{ github.event.inputs.runner_label }}" ]; then
            echo ${{ github.event.inputs.runner_label }} >> $GITHUB_OUTPUT
          else
            runners=$(curl -s -H "Accept: application/vnd.github+json" -H "Authorization: token ${{ secrets.REPO_ACCESS_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/actions/runners")
            available=$(echo "$runners" | jq '.runners[] | select(.status == "online" and .labels[] .name == "self-hosted")')
            if [ -n "$available" ]; then
              echo "runner_label=self-hosted" >> $GITHUB_OUTPUT
            else
              echo "runner_label=ubuntu-latest" >> $GITHUB_OUTPUT
            fi
          fi
  build:
    if: github.ref != 'refs/heads/main'
    needs: check-runner
    runs-on: ${{ needs.check-runner.outputs.runner_label }}
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: 'poetry'
      - name: Install dependencies
        run: poetry install --with docs
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - name: Setting up Cache
        uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .ci-cache
          restore-keys: |
            mkdocs-material-
      - name: Build Docs
        run: poetry run mkdocs build
  deploy:
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: 'poetry'
      - name: Install dependencies
        run: poetry install --with docs
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - name: Setting up Cache
        uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .ci-cache
          restore-keys: |
            mkdocs-material-
      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          run-id: ${{ inputs.test-run-id }}
          path: docs/coverage/
      - name: Deploy
        run: poetry run mkdocs gh-deploy --force