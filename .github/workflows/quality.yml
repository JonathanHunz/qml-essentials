name: Quality
on:
  pull_request:
    branches: [ "main" ]
  workflow_call:
permissions:
  contents: read
jobs:
  check-runner:
    runs-on: ubuntu-latest
    outputs:
      runner-label: ${{ steps.set-runner.outputs.runner-label }}
    steps:
      - name: Set runner
        id: set-runner
        run: |
          runners=$(curl -s -H "Accept: application/vnd.github+json" -H "Authorization: token ${{ secrets.REPO_ACCESS_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/actions/runners")
          available=$(echo "$runners" | jq '.runners[] | select(.status != "online" and .labels[] .name == "self-hosted")')
          if [ -n "$available" ]; then
            echo "runner-label=self-hosted" >> $GITHUB_OUTPUT
          else
            echo "runner-label=ubuntu-latest" >> $GITHUB_OUTPUT
          fi
  quality:
    needs: check-runner
    runs-on: ${{ needs.check-runner.outputs.runner-label }}
    steps:
    - uses: actions/checkout@v4
    - name: Install poetry
      run: pipx install poetry
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: 'poetry'
    - name: Install dependencies
      run: poetry install --with dev
    - name: Lint with flake8
      run: |
        poetry run flake8 qml_essentials
        poetry run flake8 tests
    - name: Running license check
      run: poetry run licensecheck --zero --license mit
